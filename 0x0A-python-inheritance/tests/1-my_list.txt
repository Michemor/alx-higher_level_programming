#Module: docstring for testing 	`1-my_list.py`
=============================
Usage of 1-my_list.py:
Inherits from list class and sorts a list in ascending order


Instantiation with empty list
	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

	>>> print(n_list)
 	[]
	>>> a_list = MyList([1, 2, 3])
	>>> print(a_list)
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	>>> my_list.print_sorted()
	>>> print(my_list)

Test case for negative numbers
	>>> num_list = MyList()
	>>> num_list.append(-1)
	>>> num_list.append(-20)
	>>> num_list.append(-3)
	>>> num_list.append(-78)
	>>> print(num_list)
	[-1, -20, -3, -78]
	>>> num_list.print_sorted()
	[-78, -20, -3, -1]

	
Test case for mixed list containing ints and str
	>>> some_list = MyList()
	>>> some_list.append(2)
	>>> some_list.append("James")
	>>> some_list.append("candy")
	>>> some_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'int' and 'str'


test case for list containing strings
	>>> names_list = MyList()
	>>> names_list.append("candy")
	>>> names_list.append("apple")
	>>> names_list.append("favour")
	>>> names_list.print_sorted()
	['apple', 'candy', 'favour']
